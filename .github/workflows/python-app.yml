# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12.3
      uses: actions/setup-python@v3
      with:
        python-version: "3.12.3"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Install JDK21 for running Karate
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Get a Karate jar
      run: |
        # TODO: always get latest version?
        wget -q -O karate.jar https://github.com/karatelabs/karate/releases/download/v1.5.1/karate-1.5.1.jar
    - name: Start up the fastapi app
      run: |
        fastapi run app/main.py &
        # FIXME: startup failure is not failing this step in the workflow!
    - name: Run the karate tests
      run: |
        if [ -f karate_results ]; then
          rm karate_results
        fi
        java -cp  karate.jar com.intuit.karate.Main test/karate/ > karate_results
        cat ./karate_results
        echo Karate tests status: 
        if grep -q "failed: 0" ./karate_results; then
            echo Passed
        else
            echo Failed
            exit 1
        fi
    - name: Cleanup - kill fastapi
      run: |
        killall fastapi
